html {
    box-sizing: border-box;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

html,
body {
    width: 100vw;
    height: 100vh;
    margin: 0;
    padding: 0;
}

body {
    background: white url("../img/kanshan_little.png") no-repeat 0% 100%/300px;
    font-family: 'Coda', cursive;
}

/*information board style*/
.information {
  position: fixed;
  z-index: 2;
  top: 0; left: 0; bottom: 0; right: 0;
  /*width: 100%;
  height: 100%;*/
}

.win,
.renew,
.mode-choose {
  display: none;
}


.win .fade-in {
  animation-name: fade-in;
  animation-duration: 0.6s;
  animation-fill-mode: forwards;
}

.win .delay {
  animation-delay: 0;
}

.win .delay-two {
  animation-delay: 0.3s;
}

.win .delay-three {
  animation-delay: 0.6s;
}

.bounce-in-down {
  animation: bounceInDown 1s forwards;
}

.information section {
  box-sizing: content-box;
  position: absolute;
  top: 50%; left: 50%;
  transform: translate(-50%, -70%);
  padding: 20px 60px;
  border-radius: 0.8rem;
  text-align: center;
  background-color: white;
}

.mode-choose section {
  padding: 20px 30px;
  width: 22rem;
  height: 10rem;
  box-shadow: 10px 10px 15px rgb(150, 150, 150);
  border-radius: 0.5rem;
}

.mode-choose section.flipInX {
  -webkit-backface-visibility: visible !important;
  backface-visibility: visible !important;
  animation: flipInX 0.5s forwards;
}

.mode-choose section.flipOutX {
  animation: flipOutX 0.5s forwards;
  -webkit-backface-visibility: visible !important;
  backface-visibility: visible !important;
}

.information section .header {
  font-size: 40px;
  font-weight: 900;
  margin-bottom: 5px;
}

.information section p {
  font-size: 25px;
  margin: 0;
  margin: 10px;
}

#stepsInfor,
#minute,
#second {
  font-size: 30px;
  font-weight: bold;
}


.information section .button {
  display: block;
  text-decoration: none;
  font-size: 20px;
  margin: auto;
  padding: 10px 12px;
  border-radius: 0.5rem;
  font-weight: bold;
  color: #0f88eb;
  border: 2px solid #0f88eb;
  transition: color 0.2s,
              background-color 0.2s;
}

.information section .button:hover {
  background-color: #0f88eb;
  color: white;
  transition: all 0.2s;
}

.information section .btn-grounp {
  width: 100%;
  display: flex;
  justify-content: space-around;
  align-items: center;
}

.information section .btn-grounp .button {
  width: 6rem;
}


/*start interface style*/
.start-interface {
  display: block;        /*hidden the start interface through changing 'display = none' to 'display = flex' */
  position: absolute;
  top: 45%; left: 50%;
  transform: translate(-50%, -50%);
}

.start-interface header {
  margin: auto;
}

.start-interface header h1 {
  text-align: center;
  font-size: 50px;
  font-weight: bold;
}

.start-interface section {
  width: 30rem;
}

.start-interface .flex-cloumn {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.start-interface .flex-row {
  display: flex;
  justify-content: space-around;
  align-items: center;
}

.start-interface section a {
  display: block;
  box-sizing: border-box;
  margin-top: 5rem;
  text-decoration: none;
  text-align: center;
  font-weight: bold;
}

.start-interface section .mode label {
  font-size: 20px;
  font-weight: bold;
  width: 80px;
  height: 80px;
  line-height: 75px;
  border-radius: 50%;
  border: 3px transparent solid;
  transition: all 0.4s;
  text-align: center;
  cursor: pointer;
}


.start-interface section .mode input {
  position: absolute;
  clip: rect(0, 0, 0, 0);
}

.start-interface section .mode input:checked + label {
  transform: scale(1.5);
  box-shadow: 10px 10px 20px rgb(180, 180, 180);
}

.start-interface section .mode label:hover {
  transform: scale(1.5);
  box-shadow: 10px 10px 20px rgb(180, 180, 180);
}

.start-interface section .mode label:nth-child(2),
.start-interface section .mode label:nth-child(2):hover,
.start-interface section .mode input:nth-child(1):checked + label {
  color: #0f88eb;
}

.start-interface section .mode label:nth-child(4),
.start-interface section .mode label:nth-child(4):hover,
.start-interface section .mode input:nth-child(3):checked + label {
  color: red;
}

.start-interface section .mode label:nth-child(2):hover,
.start-interface section .mode input:nth-child(1):checked + label {
  border-color: #0f88eb;
}

.start-interface section .mode label:nth-child(4):hover,
.start-interface section .mode input:nth-child(3):checked + label {
  border-color: red;
}

#start {
  font-size: 25px;
  width: 15rem;
  line-height: 1.5rem;
  padding: 0.8rem 1.2rem;
  margin: auto;
  margin-top: 3rem;
  color: #0f88eb;
  border: 3px solid #0f88eb;
  border-radius: 0.6rem;
  background-color: white;
}

#start:hover {
  transition: all 0.2s;
  color: white;
  background-color: #0f88eb;
}

/*main content style*/
.container {
    display: none;      /*-----show the game interface through changing 'display = none' to 'display = flex'-----*/
    justify-content: center;
    align-items: center;
    transition: filter 0.2s;
    position: relative;
    width: 100%;
    height: 100%;
}

.bg-blur {
    filter: blur(10px);
}

/*
 * Styles for the deck of cards
 */

.deck {
    /*width: 580px;
    height: 590px;*/
    width: 10vw;
    min-width: 360px;
    height: calc(10vw + 10px);
    min-height: 360px;
    padding: 23px;
    border-radius: 1.2rem;
    border: 5px solid #0f88eb;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
}

.deck .card {
    height: 125px;
    width: 125px;
    border-radius: 8px;
    cursor: pointer;
    perspective: 1000px;
}

.deck .flipper {
    width: 100%;
    height: 100%;
    transition: transform 0.3s;
    transform: translateY(0deg);
    transform-style: preserve-3d;
    cursor: pointer;
    position: relative;
}

.deck .flipper .front,
.deck .flipper .back {
  backface-visibility: hidden;
  position: absolute;
  border-radius: 8px;
  top: 0; left: 0; bottom: 0; right: 0;
}

.deck .flipper .front {
  z-index: 2;
  background: #0f88eb url(../img/Udacity_logo.png) center/60px 60px no-repeat;
  transform: rotateY(0deg);
}

.deck .flipper .back {
  transform: rotateY(180deg);
  background-size: 125px 125px;
  background-repeat: no-repeat;
}

.deck .flipper.open {
  transform: rotateY(180deg);
}

.deck .flipper.match {
    cursor: default;
    animation: pulse 0.5s forwards;
    font-size: 33px;
}
.deck .flipper.error {
    cursor: default;
    animation: jello 0.5s forwards,
               close 0.5s 0.45s forwards;
    transform-origin: center;
}

/*
 * Styles for the counter
 */
 .count-down {
   display: none;
   position: absolute;
   top: 2.5rem; left: -5rem;
   width: 320px;
   height: 180px;
   border-radius: 0 90px 90px 0;
   box-shadow: 5px 5px 18px -5px rgb(170, 170, 170);
 }

 .bounce-in-left {
   animation: bounceInLeft 1s forwards;
 }

 .count-down .count-circle {
   position: absolute;
   top: 0; right: 0;
   transform: scale(0.8);
   width: 180px;
   height: 180px;
   border-radius: 50%;
   background-color: #0f88eb;
   background-image: linear-gradient(to right, #0f88eb 50%, white 0);
 }

 .count-down .count-circle::before {
   content: '';
   display: block;
   height: 100%;
   margin-left: 50%;
   background-color: inherit;
   border-radius: 0 100% 100% 0/50%;
   transform-origin: left;
 }

 .count-down .count-down-animation::before {
   animation: maskSpin 15s linear 2,
              bgColorChange 30s step-end 1;
 }

 .count-down .paused::before {
   animation-play-state: paused;
 }

 .count-down .running::before {
   animation-play-state: running;
 }

 .count-down .count-circle p {
   font-size: 40px;
   font-weight: bold;
   margin: 0;
   position: absolute;
   top: 50%; left: 50%;
   transform: translate(-50%, -50%);
   width: 90%;
   height: 90%;
   background-color: white;
   border-radius: 50%;
 }
#rest-time {
  position: absolute;
  top: 50%; left: 45%;
  transform: translate(-50%, -50%) scale(1);
  transition: all 1s;
}

#rest-time.empersized {
  color: red;
  animation: jackInTheBox 1s 4 forwards;
}

#rest-time::after {
  content: 's';
  color: inherit;
  position: absolute;
  right: -20px;
  bottom: 0;
}

/*
 * Styles for the Score Panel
 */
 .information-box {
   position: absolute;
   top: 0; right: 6rem;
   width: 10rem;
   height: 100vh;
   display: flex;
   justify-content: center;
   align-items: center;
   flex-direction: column;
   font-size: 35px;
 }

.information-box h1 {
  margin: 0;
  font-size: 50px;
  font-weight: bold;
  text-align: center;
}

.information-box .sperate-line {
  margin: 0 0 5rem 0;
  width: 5rem;
  height: 5rem;
  border-bottom: 1px solid black;
  background-image: url(../img/gif/keepWatch.gif);
  background-repeat: no-repeat;
  background-size: 60px;
  background-position: 10px 25px;
}

.score-panel p {
  margin: 0;
  font-size: 20px;
  font-weight: bold;
}

 .score-panel span {
   font-size: 20px;
   font-weight: normal;
 }

.score-panel {
    width: 10rem;
    height: 11rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-start;
}

.score-panel .stars {
    margin: 0;
    padding: 0;
    display: inline-block;
    margin: 0 5px 0 0;
}

.score-panel .moves {
  display: inline-block;
  text-align: center;
  width: 1.5rem;
}

.score-panel .restart-icon {
    align-self: center;
    float: right;
    font-size: 40px;
    cursor: pointer;
    transform: rotate(0) scale(1);
    transition: transform 0.3s;
}
.score-panel .restart-icon:hover {
    transform: rotate(360deg) scale(1.3);
    transition: transform 0.3s;
}


/*
 * animation effect
*/


/*-----wrong matched effect-----*/
@keyframes maskSpin {
  to {  transform: rotate(0.5turn); }
}

@keyframes bgColorChange {
  50% { background-color: white; }
}

@keyframes close {
  to { transform: rotateY(0deg); }
}

@keyframes fade-in {
  from {
    transform: scale(0);
  }

  25% {
    transform: scale(0.4);
  }

  45% {
    transform: scale(0.8);
  }

  55% {
    transform: scale(1);
  }

  65% {
    transform: scale(1.3);
  }

  75% {
    transform: scale(1.5);
  }

  82% {
    transform: scale(1.23);
  }

  91% {
    transform: scale(1.1);
  }

  to {
    transform: scale(1);
  }
}
/*-----wrong matched effect-----*/
@keyframes jello {
  from, 11.1%, to {
    transform: rotateY(180deg) skewX(0deg) skewY(0deg);
  }

  22.2% {
    transform: rotateY(180deg) skewX(-15.5deg) skewY(-15.5deg);
  }

  33.3% {
    transform: rotateY(180deg) skewX(10.25deg) skewY(10.25deg);
  }

  44.4% {
    transform: rotateY(180deg) skewX(-3.125deg) skewY(-3.125deg);
  }

  55.5% {
    transform: rotateY(180deg) skewX(4.5625deg) skewY(4.5625deg);
  }

  66.6% {
    transform: rotateY(180deg) skewX(-1.78125deg) skewY(-1.78125deg);
  }

  77.7% {
    transform: rotateY(180deg) skewX(0.590625deg) skewY(0.590625deg);
  }

  88.8% {
    transform: rotateY(180deg) skewX(-0.2053125deg) skewY(-0.2053125deg);
  }
}
/*-----right matched effect-----*/
@keyframes pulse {
  from {
    transform: rotateY(180deg) scale(1);
  }

  50% {
    transform: rotateY(180deg) scale(1.1);
  }

  to {
    transform: rotateY(180deg) scale(1);
  }
}
/*finial text animation*/
@keyframes bounceInDown {
  from, 60%, 75%, 90%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  0% {
    opacity: 0;
    transform: translate(0, -3000px);
  }

  60% {
    opacity: 1;
    transform: translate(0, 25px);
  }

  75% {
    transform: translate(0, -10px);
  }

  90% {
    transform: translate(0, 5px);
  }

  to {
    transform: none;
  }
}

@keyframes bounceInLeft {
  from, 60%, 75%, 90%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  0% {
    opacity: 0;
    transform: translate(-3000px, 0);
  }

  60% {
    opacity: 1;
    transform: translate(25px, 0);
  }

  75% {
    transform: translate(-10px, 0);
  }

  90% {
    transform: translate(5px, 0);
  }

  to {
    transform: none;
  }
}

@keyframes jackInTheBox {
  from {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.1) rotate(30deg);
    transform-origin: center bottom;
  }

  50% {
    transform: translate(-50%, -50%) scale(1.2) rotate(-10deg);
  }

  70% {
    transform: translate(-50%, -50%) scale(2) rotate(3deg);
  }

  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1.6);
  }
}


/*choose mode dialog animation*/
@keyframes flipInX {
  from {
    transform: translate(-50%, -70%) perspective(400px) rotate3d(1, 0, 0, -90deg);
    animation-timing-function: ease-in;
    opacity: 0;
  }

  40% {
    transform: translate(-50%, -70%) perspective(400px) rotate3d(1, 0, 0, -20deg);
    animation-timing-function: ease-in;
  }

  60% {
    transform: translate(-50%, -70%) perspective(400px) rotate3d(1, 0, 0, 10deg);
    opacity: 1;
  }

  80% {
    transform: translate(-50%, -70%) perspective(400px) rotate3d(1, 0, 0, -5deg);
  }

  to {
    transform: translate(-50%, -70%) perspective(400px) rotate3d(1, 0, 0, 0deg);
  }
}

@keyframes flipOutX {
  from {
    transform: translate(-50%, -70%) perspective(400px)  rotate3d(1, 0, 0, 0deg);
  }

  30% {
    transform: translate(-50%, -70%) perspective(400px) rotate3d(1, 0, 0, -20deg);
    opacity: 1;
  }

  to {
    transform: translate(-50%, -70%) perspective(400px) rotate3d(1, 0, 0, 90deg);
    opacity: 0;
  }
}
